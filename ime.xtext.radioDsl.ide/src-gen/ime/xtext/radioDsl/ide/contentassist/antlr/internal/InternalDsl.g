/*
 * generated by Xtext 2.24.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package ime.xtext.radioDsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package ime.xtext.radioDsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import ime.xtext.radioDsl.services.DslGrammarAccess;

}
@parser::members {
	private DslGrammarAccess grammarAccess;

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRuleSet
entryRuleRuleSet
:
{ before(grammarAccess.getRuleSetRule()); }
	 ruleRuleSet
{ after(grammarAccess.getRuleSetRule()); } 
	 EOF 
;

// Rule RuleSet
ruleRuleSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleSetAccess().getGroup()); }
		(rule__RuleSet__Group__0)
		{ after(grammarAccess.getRuleSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeftSide
entryRuleLeftSide
:
{ before(grammarAccess.getLeftSideRule()); }
	 ruleLeftSide
{ after(grammarAccess.getLeftSideRule()); } 
	 EOF 
;

// Rule LeftSide
ruleLeftSide 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftSideAccess().getAlternatives()); }
		(rule__LeftSide__Alternatives)
		{ after(grammarAccess.getLeftSideAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightSide
entryRuleRightSide
:
{ before(grammarAccess.getRightSideRule()); }
	 ruleRightSide
{ after(grammarAccess.getRightSideRule()); } 
	 EOF 
;

// Rule RightSide
ruleRightSide 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightSideAccess().getAlternatives()); }
		(rule__RightSide__Alternatives)
		{ after(grammarAccess.getRightSideAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperator
entryRuleOperator
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleOperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule Operator
ruleOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
		(rule__Operator__Alternatives)
		{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperand
entryRuleOperand
:
{ before(grammarAccess.getOperandRule()); }
	 ruleOperand
{ after(grammarAccess.getOperandRule()); } 
	 EOF 
;

// Rule Operand
ruleOperand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperandAccess().getAlternatives()); }
		(rule__Operand__Alternatives)
		{ after(grammarAccess.getOperandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeftSide_Impl
entryRuleLeftSide_Impl
:
{ before(grammarAccess.getLeftSide_ImplRule()); }
	 ruleLeftSide_Impl
{ after(grammarAccess.getLeftSide_ImplRule()); } 
	 EOF 
;

// Rule LeftSide_Impl
ruleLeftSide_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftSide_ImplAccess().getGroup()); }
		(rule__LeftSide_Impl__Group__0)
		{ after(grammarAccess.getLeftSide_ImplAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightSide_Impl
entryRuleRightSide_Impl
:
{ before(grammarAccess.getRightSide_ImplRule()); }
	 ruleRightSide_Impl
{ after(grammarAccess.getRightSide_ImplRule()); } 
	 EOF 
;

// Rule RightSide_Impl
ruleRightSide_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightSide_ImplAccess().getGroup()); }
		(rule__RightSide_Impl__Group__0)
		{ after(grammarAccess.getRightSide_ImplAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleExp
entryRuleSimpleExp
:
{ before(grammarAccess.getSimpleExpRule()); }
	 ruleSimpleExp
{ after(grammarAccess.getSimpleExpRule()); } 
	 EOF 
;

// Rule SimpleExp
ruleSimpleExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleExpAccess().getGroup()); }
		(rule__SimpleExp__Group__0)
		{ after(grammarAccess.getSimpleExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompoundExp
entryRuleCompoundExp
:
{ before(grammarAccess.getCompoundExpRule()); }
	 ruleCompoundExp
{ after(grammarAccess.getCompoundExpRule()); } 
	 EOF 
;

// Rule CompoundExp
ruleCompoundExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompoundExpAccess().getGroup()); }
		(rule__CompoundExp__Group__0)
		{ after(grammarAccess.getCompoundExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression_Impl
entryRuleExpression_Impl
:
{ before(grammarAccess.getExpression_ImplRule()); }
	 ruleExpression_Impl
{ after(grammarAccess.getExpression_ImplRule()); } 
	 EOF 
;

// Rule Expression_Impl
ruleExpression_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpression_ImplAccess().getGroup()); }
		(rule__Expression_Impl__Group__0)
		{ after(grammarAccess.getExpression_ImplAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogic
entryRuleLogic
:
{ before(grammarAccess.getLogicRule()); }
	 ruleLogic
{ after(grammarAccess.getLogicRule()); } 
	 EOF 
;

// Rule Logic
ruleLogic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicAccess().getGroup()); }
		(rule__Logic__Group__0)
		{ after(grammarAccess.getLogicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparator
entryRuleComparator
:
{ before(grammarAccess.getComparatorRule()); }
	 ruleComparator
{ after(grammarAccess.getComparatorRule()); } 
	 EOF 
;

// Rule Comparator
ruleComparator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparatorAccess().getGroup()); }
		(rule__Comparator__Group__0)
		{ after(grammarAccess.getComparatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMaths
entryRuleMaths
:
{ before(grammarAccess.getMathsRule()); }
	 ruleMaths
{ after(grammarAccess.getMathsRule()); } 
	 EOF 
;

// Rule Maths
ruleMaths 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathsAccess().getGroup()); }
		(rule__Maths__Group__0)
		{ after(grammarAccess.getMathsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNum
entryRuleNum
:
{ before(grammarAccess.getNumRule()); }
	 ruleNum
{ after(grammarAccess.getNumRule()); } 
	 EOF 
;

// Rule Num
ruleNum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumAccess().getGroup()); }
		(rule__Num__Group__0)
		{ after(grammarAccess.getNumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStrings
entryRuleStrings
:
{ before(grammarAccess.getStringsRule()); }
	 ruleStrings
{ after(grammarAccess.getStringsRule()); } 
	 EOF 
;

// Rule Strings
ruleStrings 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringsAccess().getGroup()); }
		(rule__Strings__Group__0)
		{ after(grammarAccess.getStringsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolAttributes
entryRuleBoolAttributes
:
{ before(grammarAccess.getBoolAttributesRule()); }
	 ruleBoolAttributes
{ after(grammarAccess.getBoolAttributesRule()); } 
	 EOF 
;

// Rule BoolAttributes
ruleBoolAttributes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolAttributesAccess().getGroup()); }
		(rule__BoolAttributes__Group__0)
		{ after(grammarAccess.getBoolAttributesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringAttributes
entryRuleStringAttributes
:
{ before(grammarAccess.getStringAttributesRule()); }
	 ruleStringAttributes
{ after(grammarAccess.getStringAttributesRule()); } 
	 EOF 
;

// Rule StringAttributes
ruleStringAttributes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringAttributesAccess().getGroup()); }
		(rule__StringAttributes__Group__0)
		{ after(grammarAccess.getStringAttributesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumAttributes
entryRuleNumAttributes
:
{ before(grammarAccess.getNumAttributesRule()); }
	 ruleNumAttributes
{ after(grammarAccess.getNumAttributesRule()); } 
	 EOF 
;

// Rule NumAttributes
ruleNumAttributes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumAttributesAccess().getGroup()); }
		(rule__NumAttributes__Group__0)
		{ after(grammarAccess.getNumAttributesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBool
entryRuleBool
:
{ before(grammarAccess.getBoolRule()); }
	 ruleBool
{ after(grammarAccess.getBoolRule()); } 
	 EOF 
;

// Rule Bool
ruleBool 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolAccess().getGroup()); }
		(rule__Bool__Group__0)
		{ after(grammarAccess.getBoolAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEDouble
entryRuleEDouble
:
{ before(grammarAccess.getEDoubleRule()); }
	 ruleEDouble
{ after(grammarAccess.getEDoubleRule()); } 
	 EOF 
;

// Rule EDouble
ruleEDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEDoubleAccess().getGroup()); }
		(rule__EDouble__Group__0)
		{ after(grammarAccess.getEDoubleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionRadio
entryRuleActionRadio
:
{ before(grammarAccess.getActionRadioRule()); }
	 ruleActionRadio
{ after(grammarAccess.getActionRadioRule()); } 
	 EOF 
;

// Rule ActionRadio
ruleActionRadio 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionRadioAccess().getGroup()); }
		(rule__ActionRadio__Group__0)
		{ after(grammarAccess.getActionRadioAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule LogicOp
ruleLogicOp
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicOpAccess().getAlternatives()); }
		(rule__LogicOp__Alternatives)
		{ after(grammarAccess.getLogicOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule CompOp
ruleCompOp
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompOpAccess().getAlternatives()); }
		(rule__CompOp__Alternatives)
		{ after(grammarAccess.getCompOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MathOp
ruleMathOp
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathOpAccess().getAlternatives()); }
		(rule__MathOp__Alternatives)
		{ after(grammarAccess.getMathOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BoolAttr
ruleBoolAttr
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolAttrAccess().getAlternatives()); }
		(rule__BoolAttr__Alternatives)
		{ after(grammarAccess.getBoolAttrAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule StringAttr
ruleStringAttr
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringAttrAccess().getOpRoleEnumLiteralDeclaration()); }
		('OpRole')
		{ after(grammarAccess.getStringAttrAccess().getOpRoleEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule NumAttr
ruleNumAttr
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumAttrAccess().getAlternatives()); }
		(rule__NumAttr__Alternatives)
		{ after(grammarAccess.getNumAttrAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RadioModes
ruleRadioModes
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRadioModesAccess().getAlternatives()); }
		(rule__RadioModes__Alternatives)
		{ after(grammarAccess.getRadioModesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftSide__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftSideAccess().getLeftSide_ImplParserRuleCall_0()); }
		ruleLeftSide_Impl
		{ after(grammarAccess.getLeftSideAccess().getLeftSide_ImplParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLeftSideAccess().getSimpleExpParserRuleCall_1()); }
		ruleSimpleExp
		{ after(grammarAccess.getLeftSideAccess().getSimpleExpParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLeftSideAccess().getCompoundExpParserRuleCall_2()); }
		ruleCompoundExp
		{ after(grammarAccess.getLeftSideAccess().getCompoundExpParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLeftSideAccess().getExpression_ImplParserRuleCall_3()); }
		ruleExpression_Impl
		{ after(grammarAccess.getLeftSideAccess().getExpression_ImplParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightSide__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightSideAccess().getRightSide_ImplParserRuleCall_0()); }
		ruleRightSide_Impl
		{ after(grammarAccess.getRightSideAccess().getRightSide_ImplParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRightSideAccess().getActionRadioParserRuleCall_1()); }
		ruleActionRadio
		{ after(grammarAccess.getRightSideAccess().getActionRadioParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getLogicParserRuleCall_0()); }
		ruleLogic
		{ after(grammarAccess.getOperatorAccess().getLogicParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getComparatorParserRuleCall_1()); }
		ruleComparator
		{ after(grammarAccess.getOperatorAccess().getComparatorParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getMathsParserRuleCall_2()); }
		ruleMaths
		{ after(grammarAccess.getOperatorAccess().getMathsParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getNumParserRuleCall_0()); }
		ruleNum
		{ after(grammarAccess.getOperandAccess().getNumParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getStringsParserRuleCall_1()); }
		ruleStrings
		{ after(grammarAccess.getOperandAccess().getStringsParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getBoolAttributesParserRuleCall_2()); }
		ruleBoolAttributes
		{ after(grammarAccess.getOperandAccess().getBoolAttributesParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getStringAttributesParserRuleCall_3()); }
		ruleStringAttributes
		{ after(grammarAccess.getOperandAccess().getStringAttributesParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getNumAttributesParserRuleCall_4()); }
		ruleNumAttributes
		{ after(grammarAccess.getOperandAccess().getNumAttributesParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getBoolParserRuleCall_5()); }
		ruleBool
		{ after(grammarAccess.getOperandAccess().getBoolParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpression_ImplParserRuleCall_0()); }
		ruleExpression_Impl
		{ after(grammarAccess.getExpressionAccess().getExpression_ImplParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getSimpleExpParserRuleCall_1()); }
		ruleSimpleExp
		{ after(grammarAccess.getExpressionAccess().getSimpleExpParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getCompoundExpParserRuleCall_2()); }
		ruleCompoundExp
		{ after(grammarAccess.getExpressionAccess().getCompoundExpParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Alternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEDoubleAccess().getEKeyword_4_0_0()); }
		'E'
		{ after(grammarAccess.getEDoubleAccess().getEKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEDoubleAccess().getEKeyword_4_0_1()); }
		'e'
		{ after(grammarAccess.getEDoubleAccess().getEKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicOpAccess().getNoneEnumLiteralDeclaration_0()); }
		('None')
		{ after(grammarAccess.getLogicOpAccess().getNoneEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicOpAccess().getAndEnumLiteralDeclaration_1()); }
		('and')
		{ after(grammarAccess.getLogicOpAccess().getAndEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getLogicOpAccess().getOrEnumLiteralDeclaration_2()); }
		('or')
		{ after(grammarAccess.getLogicOpAccess().getOrEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getLogicOpAccess().getNotEnumLiteralDeclaration_3()); }
		('not')
		{ after(grammarAccess.getLogicOpAccess().getNotEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompOpAccess().getGreaterEnumLiteralDeclaration_0()); }
		('greater')
		{ after(grammarAccess.getCompOpAccess().getGreaterEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompOpAccess().getGreater_equalEnumLiteralDeclaration_1()); }
		('greater_equal')
		{ after(grammarAccess.getCompOpAccess().getGreater_equalEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompOpAccess().getLessEnumLiteralDeclaration_2()); }
		('less')
		{ after(grammarAccess.getCompOpAccess().getLessEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompOpAccess().getLess_equalEnumLiteralDeclaration_3()); }
		('less_equal')
		{ after(grammarAccess.getCompOpAccess().getLess_equalEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getCompOpAccess().getEqualEnumLiteralDeclaration_4()); }
		('equal')
		{ after(grammarAccess.getCompOpAccess().getEqualEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getCompOpAccess().getNot_equalEnumLiteralDeclaration_5()); }
		('not_equal')
		{ after(grammarAccess.getCompOpAccess().getNot_equalEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathOpAccess().getPlusEnumLiteralDeclaration_0()); }
		('plus')
		{ after(grammarAccess.getMathOpAccess().getPlusEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMathOpAccess().getMinusEnumLiteralDeclaration_1()); }
		('minus')
		{ after(grammarAccess.getMathOpAccess().getMinusEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getMathOpAccess().getDividedEnumLiteralDeclaration_2()); }
		('divided')
		{ after(grammarAccess.getMathOpAccess().getDividedEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getMathOpAccess().getMultiplicationEnumLiteralDeclaration_3()); }
		('multiplication')
		{ after(grammarAccess.getMathOpAccess().getMultiplicationEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolAttr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolAttrAccess().getSNRValues_ASCEnumLiteralDeclaration_0()); }
		('SNRValues_ASC')
		{ after(grammarAccess.getBoolAttrAccess().getSNRValues_ASCEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoolAttrAccess().getSNRValues_DESCEnumLiteralDeclaration_1()); }
		('SNRValues_DESC')
		{ after(grammarAccess.getBoolAttrAccess().getSNRValues_DESCEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumAttr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumAttrAccess().getSecLevelEnumLiteralDeclaration_0()); }
		('SecLevel')
		{ after(grammarAccess.getNumAttrAccess().getSecLevelEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumAttrAccess().getCarrierFreqEnumLiteralDeclaration_1()); }
		('CarrierFreq')
		{ after(grammarAccess.getNumAttrAccess().getCarrierFreqEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RadioModes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRadioModesAccess().getSILENT_MODEEnumLiteralDeclaration_0()); }
		('SILENT_MODE')
		{ after(grammarAccess.getRadioModesAccess().getSILENT_MODEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRadioModesAccess().getALERT_MODEEnumLiteralDeclaration_1()); }
		('ALERT_MODE')
		{ after(grammarAccess.getRadioModesAccess().getALERT_MODEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRadioModesAccess().getFULLDUPLEX_MODEEnumLiteralDeclaration_2()); }
		('FULLDUPLEX_MODE')
		{ after(grammarAccess.getRadioModesAccess().getFULLDUPLEX_MODEEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getRadioModesAccess().getNORMAL_MODEEnumLiteralDeclaration_3()); }
		('NORMAL_MODE')
		{ after(grammarAccess.getRadioModesAccess().getNORMAL_MODEEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getRadioModesAccess().getMAINTAIN_CURRENT_MODEEnumLiteralDeclaration_4()); }
		('MAINTAIN_CURRENT_MODE')
		{ after(grammarAccess.getRadioModesAccess().getMAINTAIN_CURRENT_MODEEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__0__Impl
	rule__RuleSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getRuleSetAction_0()); }
	()
	{ after(grammarAccess.getRuleSetAccess().getRuleSetAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__1__Impl
	rule__RuleSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getRuleSetKeyword_1()); }
	'RuleSet'
	{ after(grammarAccess.getRuleSetAccess().getRuleSetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__2__Impl
	rule__RuleSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRuleSetAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__3__Impl
	rule__RuleSet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getGroup_3()); }
	(rule__RuleSet__Group_3__0)?
	{ after(grammarAccess.getRuleSetAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getRuleSetAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group_3__0__Impl
	rule__RuleSet__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getRuleKeyword_3_0()); }
	'rule'
	{ after(grammarAccess.getRuleSetAccess().getRuleKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group_3__1__Impl
	rule__RuleSet__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getLeftCurlyBracketKeyword_3_1()); }
	'{'
	{ after(grammarAccess.getRuleSetAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group_3__2__Impl
	rule__RuleSet__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getRuleAssignment_3_2()); }
	(rule__RuleSet__RuleAssignment_3_2)
	{ after(grammarAccess.getRuleSetAccess().getRuleAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group_3__3__Impl
	rule__RuleSet__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getGroup_3_3()); }
	(rule__RuleSet__Group_3_3__0)*
	{ after(grammarAccess.getRuleSetAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getRightCurlyBracketKeyword_3_4()); }
	'}'
	{ after(grammarAccess.getRuleSetAccess().getRightCurlyBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group_3_3__0__Impl
	rule__RuleSet__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getCommaKeyword_3_3_0()); }
	','
	{ after(grammarAccess.getRuleSetAccess().getCommaKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getRuleAssignment_3_3_1()); }
	(rule__RuleSet__RuleAssignment_3_3_1)
	{ after(grammarAccess.getRuleSetAccess().getRuleAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
	'Rule'
	{ after(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getPriorityAssignment_1()); }
	(rule__Rule__PriorityAssignment_1)
	{ after(grammarAccess.getRuleAccess().getPriorityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getNameKeyword_3()); }
	'name'
	{ after(grammarAccess.getRuleAccess().getNameKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__4__Impl
	rule__Rule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getNameAssignment_4()); }
	(rule__Rule__NameAssignment_4)
	{ after(grammarAccess.getRuleAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__5__Impl
	rule__Rule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getLeftsideKeyword_5()); }
	'leftside'
	{ after(grammarAccess.getRuleAccess().getLeftsideKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__6__Impl
	rule__Rule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getLeftsideAssignment_6()); }
	(rule__Rule__LeftsideAssignment_6)
	{ after(grammarAccess.getRuleAccess().getLeftsideAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__7__Impl
	rule__Rule__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRightsideKeyword_7()); }
	'rightside'
	{ after(grammarAccess.getRuleAccess().getRightsideKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__8__Impl
	rule__Rule__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRightsideAssignment_8()); }
	(rule__Rule__RightsideAssignment_8)
	{ after(grammarAccess.getRuleAccess().getRightsideAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftSide_Impl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftSide_Impl__Group__0__Impl
	rule__LeftSide_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftSide_Impl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftSide_ImplAccess().getLeftSideAction_0()); }
	()
	{ after(grammarAccess.getLeftSide_ImplAccess().getLeftSideAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftSide_Impl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftSide_Impl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftSide_Impl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftSide_ImplAccess().getLeftSideKeyword_1()); }
	'LeftSide'
	{ after(grammarAccess.getLeftSide_ImplAccess().getLeftSideKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightSide_Impl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightSide_Impl__Group__0__Impl
	rule__RightSide_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightSide_Impl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightSide_ImplAccess().getRightSideAction_0()); }
	()
	{ after(grammarAccess.getRightSide_ImplAccess().getRightSideAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightSide_Impl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightSide_Impl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightSide_Impl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightSide_ImplAccess().getRightSideKeyword_1()); }
	'RightSide'
	{ after(grammarAccess.getRightSide_ImplAccess().getRightSideKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExp__Group__0__Impl
	rule__SimpleExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpAccess().getSimpleExpKeyword_0()); }
	'SimpleExp'
	{ after(grammarAccess.getSimpleExpAccess().getSimpleExpKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExp__Group__1__Impl
	rule__SimpleExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSimpleExpAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExp__Group__2__Impl
	rule__SimpleExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpAccess().getPrecedingLogicOpKeyword_2()); }
	'PrecedingLogicOp'
	{ after(grammarAccess.getSimpleExpAccess().getPrecedingLogicOpKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExp__Group__3__Impl
	rule__SimpleExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpAccess().getPrecedingLogicOpAssignment_3()); }
	(rule__SimpleExp__PrecedingLogicOpAssignment_3)
	{ after(grammarAccess.getSimpleExpAccess().getPrecedingLogicOpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExp__Group__4__Impl
	rule__SimpleExp__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpAccess().getOperatorKeyword_4()); }
	'operator'
	{ after(grammarAccess.getSimpleExpAccess().getOperatorKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExp__Group__5__Impl
	rule__SimpleExp__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpAccess().getOperatorAssignment_5()); }
	(rule__SimpleExp__OperatorAssignment_5)
	{ after(grammarAccess.getSimpleExpAccess().getOperatorAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExp__Group__6__Impl
	rule__SimpleExp__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpAccess().getOperandKeyword_6()); }
	'operand'
	{ after(grammarAccess.getSimpleExpAccess().getOperandKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExp__Group__7__Impl
	rule__SimpleExp__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpAccess().getLeftCurlyBracketKeyword_7()); }
	'{'
	{ after(grammarAccess.getSimpleExpAccess().getLeftCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExp__Group__8__Impl
	rule__SimpleExp__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpAccess().getOperandAssignment_8()); }
	(rule__SimpleExp__OperandAssignment_8)
	{ after(grammarAccess.getSimpleExpAccess().getOperandAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExp__Group__9__Impl
	rule__SimpleExp__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpAccess().getGroup_9()); }
	(rule__SimpleExp__Group_9__0)*
	{ after(grammarAccess.getSimpleExpAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExp__Group__10__Impl
	rule__SimpleExp__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getSimpleExpAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExp__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getSimpleExpAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExp__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExp__Group_9__0__Impl
	rule__SimpleExp__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpAccess().getCommaKeyword_9_0()); }
	','
	{ after(grammarAccess.getSimpleExpAccess().getCommaKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExp__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpAccess().getOperandAssignment_9_1()); }
	(rule__SimpleExp__OperandAssignment_9_1)
	{ after(grammarAccess.getSimpleExpAccess().getOperandAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundExp__Group__0__Impl
	rule__CompoundExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundExpAccess().getCompoundExpKeyword_0()); }
	'CompoundExp'
	{ after(grammarAccess.getCompoundExpAccess().getCompoundExpKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundExp__Group__1__Impl
	rule__CompoundExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundExpAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCompoundExpAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundExp__Group__2__Impl
	rule__CompoundExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundExpAccess().getPrecedingLogicOpKeyword_2()); }
	'PrecedingLogicOp'
	{ after(grammarAccess.getCompoundExpAccess().getPrecedingLogicOpKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundExp__Group__3__Impl
	rule__CompoundExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundExpAccess().getPrecedingLogicOpAssignment_3()); }
	(rule__CompoundExp__PrecedingLogicOpAssignment_3)
	{ after(grammarAccess.getCompoundExpAccess().getPrecedingLogicOpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundExp__Group__4__Impl
	rule__CompoundExp__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundExpAccess().getExpressionKeyword_4()); }
	'expression'
	{ after(grammarAccess.getCompoundExpAccess().getExpressionKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundExp__Group__5__Impl
	rule__CompoundExp__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundExpAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getCompoundExpAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundExp__Group__6__Impl
	rule__CompoundExp__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundExpAccess().getExpressionAssignment_6()); }
	(rule__CompoundExp__ExpressionAssignment_6)
	{ after(grammarAccess.getCompoundExpAccess().getExpressionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundExp__Group__7__Impl
	rule__CompoundExp__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundExpAccess().getGroup_7()); }
	(rule__CompoundExp__Group_7__0)*
	{ after(grammarAccess.getCompoundExpAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundExp__Group__8__Impl
	rule__CompoundExp__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundExpAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getCompoundExpAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundExp__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundExpAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getCompoundExpAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundExp__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundExp__Group_7__0__Impl
	rule__CompoundExp__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundExpAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getCompoundExpAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundExp__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundExpAccess().getExpressionAssignment_7_1()); }
	(rule__CompoundExp__ExpressionAssignment_7_1)
	{ after(grammarAccess.getCompoundExpAccess().getExpressionAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_Impl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression_Impl__Group__0__Impl
	rule__Expression_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Impl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression_ImplAccess().getExpressionAction_0()); }
	()
	{ after(grammarAccess.getExpression_ImplAccess().getExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Impl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression_Impl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_Impl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression_ImplAccess().getExpressionKeyword_1()); }
	'Expression'
	{ after(grammarAccess.getExpression_ImplAccess().getExpressionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Logic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__0__Impl
	rule__Logic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getLogicKeyword_0()); }
	'Logic'
	{ after(grammarAccess.getLogicAccess().getLogicKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__1__Impl
	rule__Logic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getLogicAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__2__Impl
	rule__Logic__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getOperationKeyword_2()); }
	'Operation'
	{ after(grammarAccess.getLogicAccess().getOperationKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__3__Impl
	rule__Logic__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getOperationAssignment_3()); }
	(rule__Logic__OperationAssignment_3)
	{ after(grammarAccess.getLogicAccess().getOperationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Logic__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getLogicAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group__0__Impl
	rule__Comparator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getComparatorKeyword_0()); }
	'Comparator'
	{ after(grammarAccess.getComparatorAccess().getComparatorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group__1__Impl
	rule__Comparator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getComparatorAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group__2__Impl
	rule__Comparator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getOperationKeyword_2()); }
	'Operation'
	{ after(grammarAccess.getComparatorAccess().getOperationKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group__3__Impl
	rule__Comparator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getOperationAssignment_3()); }
	(rule__Comparator__OperationAssignment_3)
	{ after(grammarAccess.getComparatorAccess().getOperationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getComparatorAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Maths__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maths__Group__0__Impl
	rule__Maths__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Maths__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathsAccess().getMathsKeyword_0()); }
	'Maths'
	{ after(grammarAccess.getMathsAccess().getMathsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maths__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maths__Group__1__Impl
	rule__Maths__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Maths__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathsAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getMathsAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maths__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maths__Group__2__Impl
	rule__Maths__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Maths__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathsAccess().getOperationKeyword_2()); }
	'Operation'
	{ after(grammarAccess.getMathsAccess().getOperationKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maths__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maths__Group__3__Impl
	rule__Maths__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Maths__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathsAccess().getOperationAssignment_3()); }
	(rule__Maths__OperationAssignment_3)
	{ after(grammarAccess.getMathsAccess().getOperationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maths__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maths__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Maths__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathsAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getMathsAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Num__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Num__Group__0__Impl
	rule__Num__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumAccess().getNumKeyword_0()); }
	'Num'
	{ after(grammarAccess.getNumAccess().getNumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Num__Group__1__Impl
	rule__Num__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getNumAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Num__Group__2__Impl
	rule__Num__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumAccess().getValueKeyword_2()); }
	'value'
	{ after(grammarAccess.getNumAccess().getValueKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Num__Group__3__Impl
	rule__Num__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumAccess().getValueAssignment_3()); }
	(rule__Num__ValueAssignment_3)
	{ after(grammarAccess.getNumAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Num__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getNumAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Strings__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Strings__Group__0__Impl
	rule__Strings__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Strings__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringsAccess().getStringsKeyword_0()); }
	'Strings'
	{ after(grammarAccess.getStringsAccess().getStringsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Strings__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Strings__Group__1__Impl
	rule__Strings__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Strings__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringsAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getStringsAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Strings__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Strings__Group__2__Impl
	rule__Strings__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Strings__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringsAccess().getValueKeyword_2()); }
	'value'
	{ after(grammarAccess.getStringsAccess().getValueKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Strings__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Strings__Group__3__Impl
	rule__Strings__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Strings__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringsAccess().getValueAssignment_3()); }
	(rule__Strings__ValueAssignment_3)
	{ after(grammarAccess.getStringsAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Strings__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Strings__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Strings__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringsAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getStringsAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolAttributes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolAttributes__Group__0__Impl
	rule__BoolAttributes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolAttributes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolAttributesAccess().getBoolAttributesKeyword_0()); }
	'BoolAttributes'
	{ after(grammarAccess.getBoolAttributesAccess().getBoolAttributesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolAttributes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolAttributes__Group__1__Impl
	rule__BoolAttributes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolAttributes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolAttributesAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBoolAttributesAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolAttributes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolAttributes__Group__2__Impl
	rule__BoolAttributes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolAttributes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolAttributesAccess().getBoolAttrKeyword_2()); }
	'boolAttr'
	{ after(grammarAccess.getBoolAttributesAccess().getBoolAttrKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolAttributes__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolAttributes__Group__3__Impl
	rule__BoolAttributes__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolAttributes__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolAttributesAccess().getBoolAttrAssignment_3()); }
	(rule__BoolAttributes__BoolAttrAssignment_3)
	{ after(grammarAccess.getBoolAttributesAccess().getBoolAttrAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolAttributes__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolAttributes__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolAttributes__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolAttributesAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getBoolAttributesAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringAttributes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringAttributes__Group__0__Impl
	rule__StringAttributes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringAttributes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringAttributesAccess().getStringAttributesKeyword_0()); }
	'StringAttributes'
	{ after(grammarAccess.getStringAttributesAccess().getStringAttributesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringAttributes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringAttributes__Group__1__Impl
	rule__StringAttributes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringAttributes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringAttributesAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getStringAttributesAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringAttributes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringAttributes__Group__2__Impl
	rule__StringAttributes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringAttributes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringAttributesAccess().getStringAttrKeyword_2()); }
	'stringAttr'
	{ after(grammarAccess.getStringAttributesAccess().getStringAttrKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringAttributes__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringAttributes__Group__3__Impl
	rule__StringAttributes__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StringAttributes__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringAttributesAccess().getStringAttrAssignment_3()); }
	(rule__StringAttributes__StringAttrAssignment_3)
	{ after(grammarAccess.getStringAttributesAccess().getStringAttrAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringAttributes__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringAttributes__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringAttributes__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringAttributesAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getStringAttributesAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumAttributes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumAttributes__Group__0__Impl
	rule__NumAttributes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumAttributes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumAttributesAccess().getNumAttributesKeyword_0()); }
	'NumAttributes'
	{ after(grammarAccess.getNumAttributesAccess().getNumAttributesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumAttributes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumAttributes__Group__1__Impl
	rule__NumAttributes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumAttributes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumAttributesAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getNumAttributesAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumAttributes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumAttributes__Group__2__Impl
	rule__NumAttributes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumAttributes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumAttributesAccess().getNumAttrKeyword_2()); }
	'numAttr'
	{ after(grammarAccess.getNumAttributesAccess().getNumAttrKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumAttributes__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumAttributes__Group__3__Impl
	rule__NumAttributes__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NumAttributes__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumAttributesAccess().getNumAttrAssignment_3()); }
	(rule__NumAttributes__NumAttrAssignment_3)
	{ after(grammarAccess.getNumAttributesAccess().getNumAttrAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumAttributes__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumAttributes__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumAttributes__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumAttributesAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getNumAttributesAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bool__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bool__Group__0__Impl
	rule__Bool__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolAccess().getValueAssignment_0()); }
	(rule__Bool__ValueAssignment_0)
	{ after(grammarAccess.getBoolAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bool__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolAccess().getBoolKeyword_1()); }
	'Bool'
	{ after(grammarAccess.getBoolAccess().getBoolKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__0__Impl
	rule__EDouble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__1__Impl
	rule__EDouble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); }
	(RULE_INT)?
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__2__Impl
	rule__EDouble__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getEDoubleAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__3__Impl
	rule__EDouble__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getGroup_4()); }
	(rule__EDouble__Group_4__0)?
	{ after(grammarAccess.getEDoubleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_4__0__Impl
	rule__EDouble__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getAlternatives_4_0()); }
	(rule__EDouble__Alternatives_4_0)
	{ after(grammarAccess.getEDoubleAccess().getAlternatives_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_4__1__Impl
	rule__EDouble__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1()); }
	('-')?
	{ after(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2()); }
	RULE_INT
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionRadio__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRadio__Group__0__Impl
	rule__ActionRadio__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRadio__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRadioAccess().getActionRadioKeyword_0()); }
	'ActionRadio'
	{ after(grammarAccess.getActionRadioAccess().getActionRadioKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRadio__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRadio__Group__1__Impl
	rule__ActionRadio__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRadio__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRadioAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getActionRadioAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRadio__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRadio__Group__2__Impl
	rule__ActionRadio__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRadio__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRadioAccess().getNewStateKeyword_2()); }
	'newState'
	{ after(grammarAccess.getActionRadioAccess().getNewStateKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRadio__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRadio__Group__3__Impl
	rule__ActionRadio__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRadio__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRadioAccess().getNewStateAssignment_3()); }
	(rule__ActionRadio__NewStateAssignment_3)
	{ after(grammarAccess.getActionRadioAccess().getNewStateAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRadio__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRadio__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRadio__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRadioAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getActionRadioAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__RuleAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSetAccess().getRuleRuleParserRuleCall_3_2_0()); }
		ruleRule
		{ after(grammarAccess.getRuleSetAccess().getRuleRuleParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__RuleAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSetAccess().getRuleRuleParserRuleCall_3_3_1_0()); }
		ruleRule
		{ after(grammarAccess.getRuleSetAccess().getRuleRuleParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__PriorityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getPriorityEIntParserRuleCall_1_0()); }
		ruleEInt
		{ after(grammarAccess.getRuleAccess().getPriorityEIntParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getNameEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getRuleAccess().getNameEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__LeftsideAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getLeftsideLeftSideParserRuleCall_6_0()); }
		ruleLeftSide
		{ after(grammarAccess.getRuleAccess().getLeftsideLeftSideParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__RightsideAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getRightsideRightSideParserRuleCall_8_0()); }
		ruleRightSide
		{ after(grammarAccess.getRuleAccess().getRightsideRightSideParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__PrecedingLogicOpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleExpAccess().getPrecedingLogicOpLogicOpEnumRuleCall_3_0()); }
		ruleLogicOp
		{ after(grammarAccess.getSimpleExpAccess().getPrecedingLogicOpLogicOpEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__OperatorAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleExpAccess().getOperatorOperatorParserRuleCall_5_0()); }
		ruleOperator
		{ after(grammarAccess.getSimpleExpAccess().getOperatorOperatorParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__OperandAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleExpAccess().getOperandOperandParserRuleCall_8_0()); }
		ruleOperand
		{ after(grammarAccess.getSimpleExpAccess().getOperandOperandParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExp__OperandAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleExpAccess().getOperandOperandParserRuleCall_9_1_0()); }
		ruleOperand
		{ after(grammarAccess.getSimpleExpAccess().getOperandOperandParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__PrecedingLogicOpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompoundExpAccess().getPrecedingLogicOpLogicOpEnumRuleCall_3_0()); }
		ruleLogicOp
		{ after(grammarAccess.getCompoundExpAccess().getPrecedingLogicOpLogicOpEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__ExpressionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompoundExpAccess().getExpressionExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getCompoundExpAccess().getExpressionExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundExp__ExpressionAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompoundExpAccess().getExpressionExpressionParserRuleCall_7_1_0()); }
		ruleExpression
		{ after(grammarAccess.getCompoundExpAccess().getExpressionExpressionParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Logic__OperationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicAccess().getOperationLogicOpEnumRuleCall_3_0()); }
		ruleLogicOp
		{ after(grammarAccess.getLogicAccess().getOperationLogicOpEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__OperationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparatorAccess().getOperationCompOpEnumRuleCall_3_0()); }
		ruleCompOp
		{ after(grammarAccess.getComparatorAccess().getOperationCompOpEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maths__OperationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathsAccess().getOperationMathOpEnumRuleCall_3_0()); }
		ruleMathOp
		{ after(grammarAccess.getMathsAccess().getOperationMathOpEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumAccess().getValueEDoubleParserRuleCall_3_0()); }
		ruleEDouble
		{ after(grammarAccess.getNumAccess().getValueEDoubleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Strings__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringsAccess().getValueEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getStringsAccess().getValueEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolAttributes__BoolAttrAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolAttributesAccess().getBoolAttrBoolAttrEnumRuleCall_3_0()); }
		ruleBoolAttr
		{ after(grammarAccess.getBoolAttributesAccess().getBoolAttrBoolAttrEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringAttributes__StringAttrAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringAttributesAccess().getStringAttrStringAttrEnumRuleCall_3_0()); }
		ruleStringAttr
		{ after(grammarAccess.getStringAttributesAccess().getStringAttrStringAttrEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumAttributes__NumAttrAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumAttributesAccess().getNumAttrNumAttrEnumRuleCall_3_0()); }
		ruleNumAttr
		{ after(grammarAccess.getNumAttributesAccess().getNumAttrNumAttrEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bool__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolAccess().getValueValueKeyword_0_0()); }
		(
			{ before(grammarAccess.getBoolAccess().getValueValueKeyword_0_0()); }
			'value'
			{ after(grammarAccess.getBoolAccess().getValueValueKeyword_0_0()); }
		)
		{ after(grammarAccess.getBoolAccess().getValueValueKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRadio__NewStateAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionRadioAccess().getNewStateRadioModesEnumRuleCall_3_0()); }
		ruleRadioModes
		{ after(grammarAccess.getActionRadioAccess().getNewStateRadioModesEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
