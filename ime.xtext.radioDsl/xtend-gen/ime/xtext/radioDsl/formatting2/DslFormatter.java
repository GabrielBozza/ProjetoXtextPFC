/**
 * generated by Xtext 2.24.0
 */
package ime.xtext.radioDsl.formatting2;

import Action.LeftSide;
import Action.RightSide;
import Action.Rule;
import Action.RuleSet;
import com.google.inject.Inject;
import ime.xtext.radioDsl.services.DslGrammarAccess;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class DslFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private DslGrammarAccess _dslGrammarAccess;
  
  protected void _format(final RuleSet ruleSet, @Extension final IFormattableDocument document) {
    EList<Rule> _rule = ruleSet.getRule();
    for (final Rule rule : _rule) {
      document.<Rule>format(rule);
    }
  }
  
  protected void _format(final Rule rule, @Extension final IFormattableDocument document) {
    document.<LeftSide>format(rule.getLeftside());
    document.<RightSide>format(rule.getRightside());
  }
  
  public void format(final Object rule, final IFormattableDocument document) {
    if (rule instanceof XtextResource) {
      _format((XtextResource)rule, document);
      return;
    } else if (rule instanceof Rule) {
      _format((Rule)rule, document);
      return;
    } else if (rule instanceof RuleSet) {
      _format((RuleSet)rule, document);
      return;
    } else if (rule instanceof EObject) {
      _format((EObject)rule, document);
      return;
    } else if (rule == null) {
      _format((Void)null, document);
      return;
    } else if (rule != null) {
      _format(rule, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(rule, document).toString());
    }
  }
}
